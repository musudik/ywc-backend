{
	"info": {
		"_postman_id": "c8b6e9d0-4f5e-3a2b-7c1d-9b8a7c6d5e4f",
		"name": "YWC Auth API - Happy Path",
		"description": "Collection for testing the happy path scenarios of yourwealth.coach authentication API endpoints",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Register User - Happy Path",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\": \"happyuser@example.com\",\n    \"password\": \"Password123!\",\n    \"displayName\": \"Happy User\",\n    \"phoneNumber\": \"+1234567890\",\n    \"roleName\": \"CLIENT\"\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/api/auth/register",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"auth",
						"register"
					]
				},
				"description": "Successfully register a new user with email, password, and role"
			},
			"response": []
		},
		{
			"name": "Login User - Happy Path",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"if (jsonData && jsonData.token) {",
							"    pm.environment.set(\"authToken\", jsonData.token);",
							"    console.log(\"Auth token saved to environment\");",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\": \"happyuser@example.com\",\n    \"password\": \"Password123!\"\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/api/auth/login",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"auth",
						"login"
					]
				},
				"description": "Successfully login with email and password and save the token to environment"
			},
			"response": []
		},
		{
			"name": "Verify Email - Happy Path",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"token\": \"valid-verification-token\"\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/api/auth/verify-email",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"auth",
						"verify-email"
					]
				},
				"description": "Successfully verify email using a valid verification token"
			},
			"response": []
		},
		{
			"name": "Forgot Password - Happy Path",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\": \"happyuser@example.com\"\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/api/auth/forgot-password",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"auth",
						"forgot-password"
					]
				},
				"description": "Successfully request a password reset email"
			},
			"response": []
		},
		{
			"name": "Reset Password - Happy Path",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"token\": \"valid-reset-token\",\n    \"newPassword\": \"NewPassword456!\"\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/api/auth/reset-password",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"auth",
						"reset-password"
					]
				},
				"description": "Successfully reset password using a valid reset token"
			},
			"response": []
		},
		{
			"name": "Get Current User - Happy Path",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{authToken}}"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/api/auth/me",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"auth",
						"me"
					]
				},
				"description": "Successfully retrieve current user profile with valid authentication"
			},
			"response": []
		},
		{
			"name": "Update Profile - Happy Path",
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{authToken}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"displayName\": \"Updated Happy User\",\n    \"phoneNumber\": \"+9876543210\",\n    \"profileImage\": \"https://example.com/profile.jpg\"\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/api/auth/profile",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"auth",
						"profile"
					]
				},
				"description": "Successfully update user profile with valid authentication"
			},
			"response": []
		},
		{
			"name": "Firebase Webhook - Happy Path",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "X-Firebase-Webhook-Secret",
						"value": "{{firebaseWebhookSecret}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"event\": \"user.created\",\n    \"data\": {\n        \"uid\": \"firebase-uid-123\",\n        \"email\": \"webhook@example.com\",\n        \"displayName\": \"Webhook User\",\n        \"emailVerified\": true\n    }\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/api/auth/firebase-webhook",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"auth",
						"firebase-webhook"
					]
				},
				"description": "Successfully process Firebase webhook event with valid secret"
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:3000",
			"type": "string"
		},
		{
			"key": "authToken",
			"value": "",
			"type": "string"
		}
	]
} 